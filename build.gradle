plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'jacoco'
	id 'org.sonarqube' version '4.4.1.3373'
}

group = 'com.gradle'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

test {
	useJUnitPlatform()

	// Ensure tests always trigger JaCoCo
	finalizedBy jacocoTestReport
}

sonarqube {
	properties {
		property "sonar.projectKey", "gradle-jenkins-sonar-project"
		property "sonar.host.url", "http://localhost:9000"
		property "sonar.login", "sqp_7a8768c3dcaafb9cc2c4460c9eefceeb74cd6640"
		property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
	}
}

jacoco {
	toolVersion = "0.8.10"
}

jacocoTestReport {
	dependsOn test // Generate report after running tests
	reports {
		xml.required.set(true)
		csv.required.set(false)
		html.outputLocation.set(file("$buildDir/reports/jacoco"))
	}
}


tasks.named('test') {
	useJUnitPlatform()
}
